"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BATCH_STATES", {
  enumerable: true,
  get: function () {
    return _consts.BATCH_STATES;
  }
});
Object.defineProperty(exports, "FILE_STATES", {
  enumerable: true,
  get: function () {
    return _consts.FILE_STATES;
  }
});
Object.defineProperty(exports, "clone", {
  enumerable: true,
  get: function () {
    return _utils.clone;
  }
});
Object.defineProperty(exports, "createBatchItem", {
  enumerable: true,
  get: function () {
    return _batchItem.default;
  }
});
Object.defineProperty(exports, "devFreeze", {
  enumerable: true,
  get: function () {
    return _utils.devFreeze;
  }
});
Object.defineProperty(exports, "getMerge", {
  enumerable: true,
  get: function () {
    return _utils.getMerge;
  }
});
Object.defineProperty(exports, "hasWindow", {
  enumerable: true,
  get: function () {
    return _utils.hasWindow;
  }
});
Object.defineProperty(exports, "invariant", {
  enumerable: true,
  get: function () {
    return _invariant.default;
  }
});
Object.defineProperty(exports, "isFunction", {
  enumerable: true,
  get: function () {
    return _utils.isFunction;
  }
});
Object.defineProperty(exports, "isPlainObject", {
  enumerable: true,
  get: function () {
    return _utils.isPlainObject;
  }
});
Object.defineProperty(exports, "isProduction", {
  enumerable: true,
  get: function () {
    return _utils.isProduction;
  }
});
Object.defineProperty(exports, "isPromise", {
  enumerable: true,
  get: function () {
    return _utils.isPromise;
  }
});
Object.defineProperty(exports, "isSamePropInArrays", {
  enumerable: true,
  get: function () {
    return _utils.isSamePropInArrays;
  }
});
exports.logger = void 0;
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _utils.merge;
  }
});
Object.defineProperty(exports, "parseResponseHeaders", {
  enumerable: true,
  get: function () {
    return _request.parseResponseHeaders;
  }
});
Object.defineProperty(exports, "pick", {
  enumerable: true,
  get: function () {
    return _utils.pick;
  }
});
Object.defineProperty(exports, "request", {
  enumerable: true,
  get: function () {
    return _request.default;
  }
});
Object.defineProperty(exports, "throttle", {
  enumerable: true,
  get: function () {
    return _justThrottle.default;
  }
});
Object.defineProperty(exports, "triggerCancellable", {
  enumerable: true,
  get: function () {
    return _triggerCancellable.default;
  }
});
Object.defineProperty(exports, "triggerUpdater", {
  enumerable: true,
  get: function () {
    return _triggerUpdater.default;
  }
});

var _invariant = _interopRequireDefault(require("invariant"));

var _justThrottle = _interopRequireDefault(require("just-throttle"));

var _consts = require("./consts");

var logger = _interopRequireWildcard(require("./logger"));

exports.logger = logger;

var _triggerCancellable = _interopRequireDefault(require("./triggerCancellable"));

var _triggerUpdater = _interopRequireDefault(require("./triggerUpdater"));

var _batchItem = _interopRequireDefault(require("./batchItem"));

var _request = _interopRequireWildcard(require("./request"));

var _utils = require("./utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }